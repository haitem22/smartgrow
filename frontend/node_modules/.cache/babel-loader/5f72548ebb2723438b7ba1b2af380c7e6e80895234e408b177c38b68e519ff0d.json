{"ast":null,"code":"var _jsxFileName = \"D:\\\\programing\\\\New folder (2)\\\\systeme-irrigation\\\\src\\\\components\\\\pages\\\\DashboardHome.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, BarChart, Bar, ResponsiveContainer } from 'recharts';\nimport io from 'socket.io-client';\nimport './DashboardHome.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StatCard = ({\n  title,\n  value,\n  icon,\n  status = 'normal'\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: `stat-card ${status}`,\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stat-icon\",\n    children: icon\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n_c = StatCard;\nconst DashboardHome = () => {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  const [currentStats, setCurrentStats] = useState({\n    humidity: 0,\n    temperature: 0,\n    waterUsed: 0\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n\n  // Initialize Socket.IO connection\n  useEffect(() => {\n    const socket = io('http://localhost:3000', {\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n\n    // Handle Socket.IO connection\n    socket.on('connect', () => {\n      console.log('✅ Connected to Socket.IO server');\n      setConnectionStatus('connected');\n      setError(null);\n      setIsLoading(false);\n    });\n\n    // Handle sensor data from server\n    socket.on('sensorData', sensorData => {\n      console.log('Data received from server:', sensorData);\n      if (sensorData && typeof sensorData === 'object') {\n        // Update current stats\n        setCurrentStats({\n          moisure: sensorData.h_soil_pourcentage || \"--\",\n          // Match MQTT data field 'h' for humidity\n          humidity: sensorData.h_air || \"--\",\n          // Match MQTT data field 'h' for humidity\n          temperature: sensorData.t || \"--\",\n          // Match MQTT data field 't' for temperature\n          waterUsed: Math.floor(Math.random() * 300) // Placeholder until real data available\n        });\n\n        // Create chart data point\n        const now = new Date();\n        const timeString = now.toLocaleTimeString().slice(0, 5);\n        const newDataPoint = {\n          time: timeString,\n          humidity: sensorData.h || 0,\n          temperature: sensorData.t || 0,\n          water: Math.floor(Math.random() * 300),\n          // Placeholder\n          timestamp: sensorData.ts ? new Date(sensorData.ts * 1000).toISOString() : now.toISOString()\n        };\n\n        // Add to chart data (keep last 10 points)\n        setChartData(prevData => {\n          const updatedData = [...prevData, newDataPoint];\n          return updatedData.slice(-10); // Keep only last 10 points\n        });\n        console.log('✅ Data updated successfully');\n      } else {\n        console.log('⚠️ Invalid data received from server');\n        setError('Invalid data received from server');\n      }\n    });\n\n    // Handle connection errors\n    socket.on('connect_error', error => {\n      console.error('❌ Socket.IO connection error:', error);\n      setConnectionStatus('disconnected');\n      setError('Failed to connect to server');\n      setIsLoading(false);\n\n      // Use fallback data if no real data available\n      if (chartData.length === 0) {\n        const fallbackData = createFallbackData();\n        setChartData(fallbackData);\n        setCurrentStats({\n          humidity: 45,\n          temperature: 23,\n          waterUsed: 150\n        });\n      }\n    });\n\n    // Handle disconnection\n    socket.on('disconnect', () => {\n      console.log('🔌 Disconnected from Socket.IO server');\n      setConnectionStatus('disconnected');\n      setError('Server disconnected');\n    });\n\n    // Initial load: check if server is running\n    const loadInitialData = async () => {\n      setIsLoading(true);\n      if (!socket.connected) {\n        console.log('⚠️ Server not running, using fallback data');\n        setError('Server not running (Start: node server.js)');\n        const fallbackData = createFallbackData();\n        setChartData(fallbackData);\n        setCurrentStats({\n          humidity: 45,\n          temperature: 23,\n          waterUsed: 150\n        });\n        setIsLoading(false);\n      }\n    };\n    loadInitialData();\n\n    // Cleanup on unmount\n    return () => {\n      socket.disconnect();\n      console.log('🧹 Socket.IO connection closed');\n    };\n  }, []);\n\n  // Fallback data when server is not available\n  const createFallbackData = () => {\n    const data = [];\n    const now = new Date();\n    for (let i = 9; i >= 0; i--) {\n      const time = new Date(now.getTime() - i * 300000);\n      data.push({\n        time: time.toLocaleTimeString().slice(0, 5),\n        humidity: Math.floor(30 + Math.random() * 50),\n        temperature: Math.floor(15 + Math.random() * 15),\n        water: Math.floor(Math.random() * 300),\n        timestamp: time.toISOString()\n      });\n    }\n    return data;\n  };\n\n  // Get status colors for stat cards\n  const getmoisureStatus = () => {\n    if (currentStats.moisure < 20) return 'danger';\n    if (currentStats.moisure < 30) return 'warning';\n    return 'normal';\n  };\n\n  // Get status colors for stat cards\n  const getHumidityStatus = () => {\n    if (currentStats.humidity < 20) return 'danger';\n    if (currentStats.humidity < 30) return 'warning';\n    return 'normal';\n  };\n  const getTemperatureStatus = () => {\n    if (currentStats.temperature > 35) return 'warning';\n    if (currentStats.temperature > 40) return 'danger';\n    return 'normal';\n  };\n\n  // Show loading\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      style: {\n        padding: '50px',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: \"\\u23F3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Chargement des donn\\xE9es du serveur...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"dashboard-home\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Syst\\xE8me d'Irrigation Intelligent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `connection-status ${connectionStatus}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-dot\",\n          children: connectionStatus === 'connected' ? '🟢' : '🔴'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-text\",\n          children: connectionStatus === 'connected' ? 'Serveur connecté' : 'Serveur déconnecté'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-banner\",\n      style: {\n        background: '#ffebee',\n        color: '#c62828',\n        padding: '10px',\n        borderRadius: '5px',\n        margin: '10px 0',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\u26A0\\uFE0F \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"retry-button\",\n        style: {\n          background: '#c62828',\n          color: 'white',\n          border: 'none',\n          padding: '5px 10px',\n          borderRadius: '3px',\n          cursor: 'pointer'\n        },\n        children: \"R\\xE9essayer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"stats-section\",\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',\n        gap: '20px',\n        margin: '20px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(StatCard, {\n        title: \"Humidit\\xE9 du sol\",\n        value: `${currentStats.moisure}%`,\n        icon: \"\\uD83D\\uDCA7\",\n        status: getmoisureStatus()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n        title: \"Temp\\xE9rature\",\n        value: `${currentStats.temperature}°C`,\n        icon: \"\\uD83C\\uDF21\\uFE0F\",\n        status: getTemperatureStatus()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n        title: \"Humidit\\xE9 de l'air\",\n        value: `${currentStats.humidity}%`,\n        icon: \"\\uD83D\\uDCA7\",\n        status: getHumidityStatus()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n        title: \"Niveau d'Irrigation\",\n        value: currentStats.moisure < 30 ? 'danger' : 'Élevé',\n        icon: \"\\uD83C\\uDF31\",\n        status: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n        title: \"Consommation d'Eau\",\n        value: `${currentStats.waterUsed}L`,\n        icon: \"\\uD83D\\uDEB0\",\n        status: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), chartData.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"chart-section\",\n        style: {\n          margin: '30px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\xC9volution de l'humidit\\xE9 et temp\\xE9rature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          style: {\n            height: '300px',\n            margin: '20px 0'\n          },\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 300,\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: chartData,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                stroke: \"#eee\",\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                yAxisId: \"left\",\n                orientation: \"left\",\n                stroke: \"#1a562f\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                yAxisId: \"right\",\n                orientation: \"right\",\n                stroke: \"#8884d8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                yAxisId: \"left\",\n                type: \"monotone\",\n                dataKey: \"humidity\",\n                stroke: \"#1a562f\",\n                strokeWidth: 2,\n                name: \"Humidit\\xE9 (%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                yAxisId: \"right\",\n                type: \"monotone\",\n                dataKey: \"temperature\",\n                stroke: \"#8884d8\",\n                strokeWidth: 2,\n                name: \"Temp\\xE9rature (\\xB0C)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"chart-section\",\n        style: {\n          margin: '30px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Consommation d'eau\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          style: {\n            height: '300px',\n            margin: '20px 0'\n          },\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 300,\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: chartData,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                stroke: \"#eee\",\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"water\",\n                fill: \"#1a562f\",\n                radius: [4, 4, 0, 0],\n                name: \"Eau consomm\\xE9e (L)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"developer-info\",\n      style: {\n        background: '#f5f5f5',\n        padding: '20px',\n        borderRadius: '5px',\n        marginTop: '30px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"details\", {\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          style: {\n            cursor: 'pointer',\n            fontWeight: 'bold'\n          },\n          children: \"\\uD83D\\uDCDA Instructions pour ESP32 (pour ton coll\\xE8gue)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Configuration MQTT ESP32:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"MQTT Broker:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this), \" 192.168.1.21:1883 (Mosquitto)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Topic:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this), \" sensor/data\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Format JSON:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              background: '#333',\n              color: '#fff',\n              padding: '10px',\n              borderRadius: '5px',\n              overflow: 'auto'\n            },\n            children: `{\n  \"sensorId\": \"sensor1\",\n  \"t\": 23,\n  \"h\": 45,\n  \"m\": 66,\n  \"ts\": 2287866\n}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Exemple code ESP32:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              background: '#333',\n              color: '#fff',\n              padding: '10px',\n              borderRadius: '5px',\n              overflow: 'auto'\n            },\n            children: `#include <WiFi.h>\n#include <PubSubClient.h>\n\nWiFiClient espClient;\nPubSubClient client(espClient);\n\nvoid setup() {\n  client.setServer(\"192.168.1.21\", 1883);\n}\n\nvoid publishSensorData() {\n  String payload = \"{\\\\\"sensorId\\\\\":\\\\\"sensor1\\\\\",\" +\n                   \"\\\\\"t\\\\\":\" + String(temperature) + \n                   \",\\\\\"h\\\\\":\" + String(humidity) + \n                   \",\\\\\"m\\\\\":\" + String(moisture) +\n                   \",\\\\\"ts\\\\\":\" + String(millis()/1000) + \"}\";\n  \n  client.publish(\"sensor/data\", payload.c_str());\n}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardHome, \"5LrEd6ho2tfefsLqZQyQL2DU0sk=\");\n_c2 = DashboardHome;\nexport default DashboardHome;\nvar _c, _c2;\n$RefreshReg$(_c, \"StatCard\");\n$RefreshReg$(_c2, \"DashboardHome\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","BarChart","Bar","ResponsiveContainer","io","jsxDEV","_jsxDEV","Fragment","_Fragment","StatCard","title","value","icon","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","DashboardHome","_s","chartData","setChartData","currentStats","setCurrentStats","humidity","temperature","waterUsed","isLoading","setIsLoading","error","setError","connectionStatus","setConnectionStatus","socket","reconnection","reconnectionAttempts","reconnectionDelay","on","console","log","sensorData","moisure","h_soil_pourcentage","h_air","t","Math","floor","random","now","Date","timeString","toLocaleTimeString","slice","newDataPoint","time","h","water","timestamp","ts","toISOString","prevData","updatedData","length","fallbackData","createFallbackData","loadInitialData","connected","disconnect","data","i","getTime","push","getmoisureStatus","getHumidityStatus","getTemperatureStatus","style","padding","textAlign","background","color","borderRadius","margin","display","justifyContent","alignItems","onClick","window","location","reload","border","cursor","gridTemplateColumns","gap","height","width","stroke","strokeDasharray","dataKey","yAxisId","orientation","type","strokeWidth","name","fill","radius","marginTop","fontWeight","overflow","_c2","$RefreshReg$"],"sources":["D:/programing/New folder (2)/systeme-irrigation/src/components/pages/DashboardHome.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, BarChart, Bar, ResponsiveContainer } from 'recharts';\r\nimport io from 'socket.io-client';\r\nimport './DashboardHome.css';\r\n\r\nconst StatCard = ({ title, value, icon, status = 'normal' }) => (\r\n  <div className={`stat-card ${status}`}>\r\n    <div className=\"stat-icon\">{icon}</div>\r\n    <h4>{title}</h4>\r\n    <p><strong>{value}</strong></p>\r\n  </div>\r\n);\r\n\r\nconst DashboardHome = () => {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [currentStats, setCurrentStats] = useState({\r\n    humidity: 0,\r\n    temperature: 0,\r\n    waterUsed: 0\r\n  });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\r\n\r\n  // Initialize Socket.IO connection\r\n  useEffect(() => {\r\n    const socket = io('http://localhost:3000', {\r\n      reconnection: true,\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 1000,\r\n    });\r\n\r\n    // Handle Socket.IO connection\r\n    socket.on('connect', () => {\r\n      console.log('✅ Connected to Socket.IO server');\r\n      setConnectionStatus('connected');\r\n      setError(null);\r\n      setIsLoading(false);\r\n    });\r\n\r\n    // Handle sensor data from server\r\n    socket.on('sensorData', (sensorData) => {\r\n      console.log('Data received from server:', sensorData);\r\n      \r\n      if (sensorData && typeof sensorData === 'object') {\r\n        // Update current stats\r\n        setCurrentStats({\r\n          moisure: sensorData.h_soil_pourcentage || \"--\", // Match MQTT data field 'h' for humidity\r\n          humidity: sensorData.h_air || \"--\", // Match MQTT data field 'h' for humidity\r\n          temperature: sensorData.t || \"--\", // Match MQTT data field 't' for temperature\r\n          waterUsed: Math.floor(Math.random() * 300) // Placeholder until real data available\r\n        });\r\n\r\n        // Create chart data point\r\n        const now = new Date();\r\n        const timeString = now.toLocaleTimeString().slice(0, 5);\r\n\r\n        const newDataPoint = {\r\n          time: timeString,\r\n          humidity: sensorData.h || 0,\r\n          temperature: sensorData.t || 0,\r\n          water: Math.floor(Math.random() * 300), // Placeholder\r\n          timestamp: sensorData.ts ? new Date(sensorData.ts * 1000).toISOString() : now.toISOString()\r\n        };\r\n\r\n        // Add to chart data (keep last 10 points)\r\n        setChartData(prevData => {\r\n          const updatedData = [...prevData, newDataPoint];\r\n          return updatedData.slice(-10); // Keep only last 10 points\r\n        });\r\n\r\n        console.log('✅ Data updated successfully');\r\n      } else {\r\n        console.log('⚠️ Invalid data received from server');\r\n        setError('Invalid data received from server');\r\n      }\r\n    });\r\n\r\n    // Handle connection errors\r\n    socket.on('connect_error', (error) => {\r\n      console.error('❌ Socket.IO connection error:', error);\r\n      setConnectionStatus('disconnected');\r\n      setError('Failed to connect to server');\r\n      setIsLoading(false);\r\n\r\n      // Use fallback data if no real data available\r\n      if (chartData.length === 0) {\r\n        const fallbackData = createFallbackData();\r\n        setChartData(fallbackData);\r\n        setCurrentStats({\r\n          humidity: 45,\r\n          temperature: 23,\r\n          waterUsed: 150\r\n        });\r\n      }\r\n    });\r\n\r\n    // Handle disconnection\r\n    socket.on('disconnect', () => {\r\n      console.log('🔌 Disconnected from Socket.IO server');\r\n      setConnectionStatus('disconnected');\r\n      setError('Server disconnected');\r\n    });\r\n\r\n    // Initial load: check if server is running\r\n    const loadInitialData = async () => {\r\n      setIsLoading(true);\r\n      if (!socket.connected) {\r\n        console.log('⚠️ Server not running, using fallback data');\r\n        setError('Server not running (Start: node server.js)');\r\n        const fallbackData = createFallbackData();\r\n        setChartData(fallbackData);\r\n        setCurrentStats({\r\n          humidity: 45,\r\n          temperature: 23,\r\n          waterUsed: 150\r\n        });\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadInitialData();\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      socket.disconnect();\r\n      console.log('🧹 Socket.IO connection closed');\r\n    };\r\n  }, []);\r\n\r\n  // Fallback data when server is not available\r\n  const createFallbackData = () => {\r\n    const data = [];\r\n    const now = new Date();\r\n    \r\n    for (let i = 9; i >= 0; i--) {\r\n      const time = new Date(now.getTime() - i * 300000);\r\n      data.push({\r\n        time: time.toLocaleTimeString().slice(0, 5),\r\n        humidity: Math.floor(30 + Math.random() * 50),\r\n        temperature: Math.floor(15 + Math.random() * 15),\r\n        water: Math.floor(Math.random() * 300),\r\n        timestamp: time.toISOString()\r\n      });\r\n    }\r\n    return data;\r\n  };\r\n\r\n  // Get status colors for stat cards\r\n  const getmoisureStatus = () => {\r\n    if (currentStats.moisure < 20) return 'danger';\r\n    if (currentStats.moisure < 30) return 'warning';\r\n    return 'normal';\r\n  };\r\n\r\n  // Get status colors for stat cards\r\n  const getHumidityStatus = () => {\r\n    if (currentStats.humidity < 20) return 'danger';\r\n    if (currentStats.humidity < 30) return 'warning';\r\n    return 'normal';\r\n  };\r\n\r\n  const getTemperatureStatus = () => {\r\n    if (currentStats.temperature > 35) return 'warning';\r\n    if (currentStats.temperature > 40) return 'danger';\r\n    return 'normal';\r\n  };\r\n\r\n  // Show loading\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"loading-container\" style={{ padding: '50px', textAlign: 'center' }}>\r\n        <div className=\"loading-spinner\">⏳</div>\r\n        <p>Chargement des données du serveur...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <main className=\"dashboard-home\">\r\n      {/* Header with connection status */}\r\n      <header className=\"dashboard-header\">\r\n        <h1>Système d'Irrigation Intelligent</h1>\r\n        <div className={`connection-status ${connectionStatus}`}>\r\n          <span className=\"status-dot\">\r\n            {connectionStatus === 'connected' ? '🟢' : '🔴'}\r\n          </span>\r\n          <span className=\"status-text\">\r\n            {connectionStatus === 'connected' ? 'Serveur connecté' : 'Serveur déconnecté'}\r\n          </span>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Error message */}\r\n      {error && (\r\n        <div className=\"error-banner\" style={{ \r\n          background: '#ffebee', \r\n          color: '#c62828', \r\n          padding: '10px', \r\n          borderRadius: '5px', \r\n          margin: '10px 0',\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center'\r\n        }}>\r\n          <span>⚠️ {error}</span>\r\n          <button \r\n            onClick={() => window.location.reload()} \r\n            className=\"retry-button\"\r\n            style={{\r\n              background: '#c62828',\r\n              color: 'white',\r\n              border: 'none',\r\n              padding: '5px 10px',\r\n              borderRadius: '3px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            Réessayer\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Stats Cards */}\r\n      <section className=\"stats-section\" style={{ \r\n        display: 'grid', \r\n        gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', \r\n        gap: '20px', \r\n        margin: '20px 0' \r\n      }}>\r\n        <StatCard \r\n          title=\"Humidité du sol\" \r\n          value={`${currentStats.moisure}%`} \r\n          icon=\"💧\"\r\n          status={getmoisureStatus()}\r\n        />\r\n        <StatCard \r\n          title=\"Température\" \r\n          value={`${currentStats.temperature}°C`} \r\n          icon=\"🌡️\"\r\n          status={getTemperatureStatus()}\r\n        />\r\n        <StatCard \r\n          title=\"Humidité de l'air\" \r\n          value={`${currentStats.humidity}%`} \r\n          icon=\"💧\"\r\n          status={getHumidityStatus()}\r\n        />\r\n        <StatCard \r\n          title=\"Niveau d'Irrigation\" \r\n          value={currentStats.moisure < 30 ? 'danger' : 'Élevé'} \r\n          icon=\"🌱\"\r\n          status=\"normal\"\r\n        />\r\n        <StatCard \r\n          title=\"Consommation d'Eau\" \r\n          value={`${currentStats.waterUsed}L`} \r\n          icon=\"🚰\"\r\n          status=\"normal\"\r\n        />\r\n      </section>\r\n\r\n      {/* Charts */}\r\n      {chartData.length > 0 && (\r\n        <>\r\n          <section className=\"chart-section\" style={{ margin: '30px 0' }}>\r\n            <h2>Évolution de l'humidité et température</h2>\r\n            <div className=\"chart-container\" style={{ height: '300px', margin: '20px 0' }}>\r\n              <ResponsiveContainer width=\"100%\" height={300}>\r\n                <LineChart data={chartData}>\r\n                  <CartesianGrid stroke=\"#eee\" strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"time\" />\r\n                  <YAxis yAxisId=\"left\" orientation=\"left\" stroke=\"#1a562f\" />\r\n                  <YAxis yAxisId=\"right\" orientation=\"right\" stroke=\"#8884d8\" />\r\n                  <Tooltip />\r\n                  <Line \r\n                    yAxisId=\"left\" \r\n                    type=\"monotone\" \r\n                    dataKey=\"humidity\" \r\n                    stroke=\"#1a562f\" \r\n                    strokeWidth={2}\r\n                    name=\"Humidité (%)\"\r\n                  />\r\n                  <Line \r\n                    yAxisId=\"right\" \r\n                    type=\"monotone\" \r\n                    dataKey=\"temperature\" \r\n                    stroke=\"#8884d8\" \r\n                    strokeWidth={2}\r\n                    name=\"Température (°C)\"\r\n                  />\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </section>\r\n\r\n          <section className=\"chart-section\" style={{ margin: '30px 0' }}>\r\n            <h2>Consommation d'eau</h2>\r\n            <div className=\"chart-container\" style={{ height: '300px', margin: '20px 0' }}>\r\n              <ResponsiveContainer width=\"100%\" height={300}>\r\n                <BarChart data={chartData}>\r\n                  <CartesianGrid stroke=\"#eee\" strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"time\" />\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                  <Bar \r\n                    dataKey=\"water\" \r\n                    fill=\"#1a562f\" \r\n                    radius={[4, 4, 0, 0]}\r\n                    name=\"Eau consommée (L)\"\r\n                  />\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </section>\r\n        </>\r\n      )}\r\n\r\n      {/* Instructions for ESP32 setup */}\r\n      <section className=\"developer-info\" style={{ \r\n        background: '#f5f5f5', \r\n        padding: '20px', \r\n        borderRadius: '5px', \r\n        marginTop: '30px' \r\n      }}>\r\n        <details>\r\n          <summary style={{ cursor: 'pointer', fontWeight: 'bold' }}>\r\n            📚 Instructions pour ESP32 (pour ton collègue)\r\n          </summary>\r\n          <div style={{ marginTop: '15px' }}>\r\n            <h4>Configuration MQTT ESP32:</h4>\r\n            <ul>\r\n              <li><strong>MQTT Broker:</strong> 192.168.1.21:1883 (Mosquitto)</li>\r\n              <li><strong>Topic:</strong> sensor/data</li>\r\n              <li><strong>Format JSON:</strong></li>\r\n            </ul>\r\n            <pre style={{ \r\n              background: '#333', \r\n              color: '#fff', \r\n              padding: '10px', \r\n              borderRadius: '5px',\r\n              overflow: 'auto'\r\n            }}>{`{\r\n  \"sensorId\": \"sensor1\",\r\n  \"t\": 23,\r\n  \"h\": 45,\r\n  \"m\": 66,\r\n  \"ts\": 2287866\r\n}`}</pre>\r\n            <h4>Exemple code ESP32:</h4>\r\n            <pre style={{ \r\n              background: '#333', \r\n              color: '#fff', \r\n              padding: '10px', \r\n              borderRadius: '5px',\r\n              overflow: 'auto'\r\n            }}>{`#include <WiFi.h>\r\n#include <PubSubClient.h>\r\n\r\nWiFiClient espClient;\r\nPubSubClient client(espClient);\r\n\r\nvoid setup() {\r\n  client.setServer(\"192.168.1.21\", 1883);\r\n}\r\n\r\nvoid publishSensorData() {\r\n  String payload = \"{\\\\\"sensorId\\\\\":\\\\\"sensor1\\\\\",\" +\r\n                   \"\\\\\"t\\\\\":\" + String(temperature) + \r\n                   \",\\\\\"h\\\\\":\" + String(humidity) + \r\n                   \",\\\\\"m\\\\\":\" + String(moisture) +\r\n                   \",\\\\\"ts\\\\\":\" + String(millis()/1000) + \"}\";\r\n  \r\n  client.publish(\"sensor/data\", payload.c_str());\r\n}`}</pre>\r\n          </div>\r\n        </details>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default DashboardHome;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}