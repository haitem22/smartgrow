{"ast":null,"code":"var _jsxFileName = \"D:\\\\programing\\\\New folder (2)\\\\systeme-irrigation\\\\src\\\\components\\\\pages\\\\Capteurs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './Capteurs.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SensorCard = ({\n  sensor,\n  onCalibrate,\n  onReset\n}) => {\n  const getStatusColor = status => {\n    switch (status) {\n      case 'active':\n        return '#4caf50';\n      case 'warning':\n        return '#ff9800';\n      case 'error':\n        return '#f44336';\n      default:\n        return '#9e9e9e';\n    }\n  };\n  const getStatusText = status => {\n    switch (status) {\n      case 'active':\n        return 'Actif';\n      case 'warning':\n        return 'Attention';\n      case 'error':\n        return 'Erreur';\n      default:\n        return 'Inactif';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sensor-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensor-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensor-icon\",\n        children: sensor.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensor-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: sensor.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sensor-type\",\n          children: sensor.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensor-status\",\n        style: {\n          backgroundColor: getStatusColor(sensor.status)\n        },\n        children: getStatusText(sensor.status)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensor-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensor-reading\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"reading-label\",\n          children: \"Valeur :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"reading-value\",\n          children: sensor.currentValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensor-specs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spec-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Plage de mesure:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: sensor.range\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spec-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Pr\\xE9cision:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: sensor.accuracy\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spec-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Derni\\xE8re calibration:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: sensor.lastCalibration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spec-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Emplacement:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: sensor.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensor-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => onCalibrate(sensor.id),\n        children: \"\\uD83D\\uDCCA Calibrer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: () => onReset(sensor.id),\n        children: \"\\uD83D\\uDD04 R\\xE9initialiser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = SensorCard;\nconst Capteurs = () => {\n  _s();\n  const [sensors, setSensors] = useState([{\n    id: 1,\n    name: 'Capteur d\\'Humidité du Sol YL-69',\n    type: 'Humidité du Sol',\n    icon: '💧',\n    currentValue: '--',\n    status: 'inactive',\n    range: '0-100%',\n    accuracy: '±2%',\n    lastCalibration: '--',\n    location: 'Zone de culture A',\n    technicalSpecs: {\n      voltage: '3.3V - 5V',\n      output: 'Signal analogique',\n      material: 'Électrodes en nickel',\n      dimensions: '60mm x 20mm x 5mm'\n    }\n  }, {\n    id: 2,\n    name: 'Capteur DHT11',\n    type: 'Température & Humidité Air',\n    icon: '🌡️',\n    currentValue: '--',\n    status: 'inactive',\n    range: '0-50°C / 20-90%',\n    accuracy: '±2°C / ±5%',\n    lastCalibration: '--',\n    location: 'Serre principale',\n    technicalSpecs: {\n      voltage: '3V - 5.5V',\n      output: 'Signal numérique',\n      interface: 'Single-wire',\n      dimensions: '15.5mm x 12mm x 5.5mm'\n    }\n  }]);\n  const [error, setError] = useState(null);\n  const [selectedSensor, setSelectedSensor] = useState(null);\n  const [showCalibrationModal, setShowCalibrationModal] = useState(false);\n  useEffect(() => {\n    const socket = io('http://localhost:3000', {\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n    socket.on('connect', () => {\n      console.log('Connected to Socket.IO server');\n      setError(null);\n    });\n    socket.on('sensorData', data => {\n      try {\n        console.log('Received sensor data:', data);\n        const timestamp = data.ts ? new Date(data.ts * 1000).toLocaleDateString('fr-FR') : new Date().toLocaleDateString('fr-FR');\n        const soilMoistureStatus = data.h_soil_pourcentage ? data.h_soil_pourcentage === 0 ? 'error' : data.h_soil_pourcentage < 40 ? 'warning' : 'active' : 'inactive';\n        const tempStatus = data.t ? data.t < 10 || data.t > 40 ? 'error' : data.t < 15 || data.t > 35 ? 'warning' : 'active' : 'inactive';\n        const humidityStatus = data.h_air ? data.h_air < 30 ? 'error' : data.h_air < 50 ? 'warning' : 'active' : 'inactive';\n        const updatedSensors = [{\n          id: 1,\n          name: 'Capteur d\\'Humidité du Sol YL-69',\n          type: 'Humidité du Sol',\n          icon: '💧',\n          currentValue: data.h_soil_pourcentage ? `${data.h_soil_pourcentage}%` : '--',\n          status: soilMoistureStatus,\n          range: '0-100%',\n          accuracy: '±2%',\n          lastCalibration: timestamp,\n          location: 'Zone de culture A',\n          technicalSpecs: {\n            voltage: '3.3V - 5V',\n            output: 'Signal analogique',\n            material: 'Électrodes en nickel',\n            dimensions: '60mm x 20mm x 5mm'\n          }\n        }, {\n          id: 2,\n          name: 'Capteur DHT11',\n          type: 'Température & Humidité Air',\n          icon: '🌡️',\n          currentValue: data.t && data.h_air ? `${data.t}°C / ${data.h_air}%` : '--',\n          status: tempStatus === 'error' || humidityStatus === 'error' ? 'error' : tempStatus === 'warning' || humidityStatus === 'warning' ? 'warning' : 'active',\n          range: '0-50°C / 20-90%',\n          accuracy: '±2°C / ±5%',\n          lastCalibration: timestamp,\n          location: 'Serre principale',\n          technicalSpecs: {\n            voltage: '3V - 5.5V',\n            output: 'Signal numérique',\n            interface: 'Single-wire',\n            dimensions: '15.5mm x 12mm x 5.5mm'\n          }\n        }];\n        setSensors(updatedSensors);\n        setError(null);\n      } catch (err) {\n        console.error('Data parsing error:', err);\n        setError('Échec de l\\'analyse des données des capteurs');\n      }\n    });\n    socket.on('connect_error', err => {\n      console.error('Socket.IO connection error:', err);\n      setError('Échec de la connexion au serveur');\n    });\n    const timeout = setTimeout(() => {\n      if (!sensors.some(sensor => sensor.currentValue !== '--')) {\n        setError('Aucune réponse du serveur');\n      }\n    }, 10000); // 10 seconds timeout\n\n    return () => {\n      socket.disconnect();\n      clearTimeout(timeout);\n      console.log('Disconnected from Socket.IO server');\n    };\n  }, []);\n  const handleCalibrate = sensorId => {\n    const sensor = sensors.find(s => s.id === sensorId);\n    setSelectedSensor(sensor);\n    setShowCalibrationModal(true);\n  };\n  const handleReset = sensorId => {\n    if (window.confirm('Êtes-vous sûr de vouloir réinitialiser ce capteur ?')) {\n      console.log(\"Resetting sensor ${sensor FHAId}\");\n      alert('Capteur réinitialisé avec succès!');\n    }\n  };\n  const handleCalibrationSubmit = e => {\n    e.preventDefault();\n    console.log('Calibrating sensor:', selectedSensor.id);\n    alert('Calibration effectuée avec succès!');\n    setShowCalibrationModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"capteurs-page\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => window.location.reload(),\n        children: \"R\\xE9essayer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Gestion des Capteurs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"page-subtitle\",\n        children: \"Surveillance et configuration des capteurs du syst\\xE8me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensors-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-number\",\n            children: sensors.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-label\",\n            children: \"Capteurs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-number\",\n            children: sensors.filter(s => s.status === 'active').length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-label\",\n            children: \"Actifs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-number\",\n            children: sensors.filter(s => s.status === 'warning').length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-label\",\n            children: \"Alertes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"sensors-grid\",\n      children: sensors.map(sensor => /*#__PURE__*/_jsxDEV(SensorCard, {\n        sensor: sensor,\n        onCalibrate: handleCalibrate,\n        onReset: handleReset\n      }, sensor.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"system-status\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\xC9tat du Syst\\xE8me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-icon\",\n            children: \"\\uD83D\\uDD0C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Connexion ESP32\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"status-value active\",\n              children: error ? 'Déconnecté' : 'Connecté'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status-time\",\n              children: \"Derni\\xE8re comm.: il y a 2 min\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-icon\",\n            children: \"\\uD83D\\uDCE1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Signal WiFi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"status-value active\",\n              children: error ? '--' : 'Excellent (-45 dBm)'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status-time\",\n              children: \"SSID: SmartGrow_Network\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-icon\",\n            children: \"\\uD83D\\uDD0B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Alimentation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"status-value active\",\n              children: error ? '--' : '5.0V (Normale)'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status-time\",\n              children: \"Consommation: 850mA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), showCalibrationModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Calibration - \", selectedSensor === null || selectedSensor === void 0 ? void 0 : selectedSensor.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setShowCalibrationModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCalibrationSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calibration-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\uD83D\\uDD27 Calibration automatique du capteur\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Assurez-vous que le capteur est dans des conditions normales avant de continuer.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calibration-steps\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"step\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"step-number\",\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"V\\xE9rifier les connexions physiques\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"step\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"step-number\",\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Placer le capteur dans un environnement de r\\xE9f\\xE9rence\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"step\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"step-number\",\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Lancer la calibration\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              onClick: () => setShowCalibrationModal(false),\n              children: \"Annuler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"D\\xE9marrer la Calibration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n};\n_s(Capteurs, \"QbBx4+A8ZBBkUW2Ikzu8/oryrXc=\");\n_c2 = Capteurs;\nexport default Capteurs;\nvar _c, _c2;\n$RefreshReg$(_c, \"SensorCard\");\n$RefreshReg$(_c2, \"Capteurs\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","SensorCard","sensor","onCalibrate","onReset","getStatusColor","status","getStatusText","className","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","name","type","style","backgroundColor","currentValue","range","accuracy","lastCalibration","location","onClick","id","_c","Capteurs","_s","sensors","setSensors","technicalSpecs","voltage","output","material","dimensions","interface","error","setError","selectedSensor","setSelectedSensor","showCalibrationModal","setShowCalibrationModal","socket","reconnection","reconnectionAttempts","reconnectionDelay","on","console","log","data","timestamp","ts","Date","toLocaleDateString","soilMoistureStatus","h_soil_pourcentage","tempStatus","t","humidityStatus","h_air","updatedSensors","err","timeout","setTimeout","some","disconnect","clearTimeout","handleCalibrate","sensorId","find","s","handleReset","window","confirm","alert","handleCalibrationSubmit","e","preventDefault","reload","length","filter","map","onSubmit","_c2","$RefreshReg$"],"sources":["D:/programing/New folder (2)/systeme-irrigation/src/components/pages/Capteurs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport './Capteurs.css';\r\n\r\nconst SensorCard = ({ sensor, onCalibrate, onReset }) => {\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'active': return '#4caf50';\r\n      case 'warning': return '#ff9800';\r\n      case 'error': return '#f44336';\r\n      default: return '#9e9e9e';\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status) => {\r\n    switch (status) {\r\n      case 'active': return 'Actif';\r\n      case 'warning': return 'Attention';\r\n      case 'error': return 'Erreur';\r\n      default: return 'Inactif';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sensor-card\">\r\n      <div className=\"sensor-header\">\r\n        <div className=\"sensor-icon\">{sensor.icon}</div>\r\n        <div className=\"sensor-info\">\r\n          <h3>{sensor.name}</h3>\r\n          <p className=\"sensor-type\">{sensor.type}</p>\r\n        </div>\r\n        <div \r\n          className=\"sensor-status\"\r\n          style={{ backgroundColor: getStatusColor(sensor.status) }}\r\n        >\r\n          {getStatusText(sensor.status)}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"sensor-details\">\r\n        <div className=\"sensor-reading\">\r\n          <span className=\"reading-label\">Valeur :</span>\r\n          <span className=\"reading-value\">{sensor.currentValue}</span>\r\n        </div>\r\n        \r\n        <div className=\"sensor-specs\">\r\n          <div className=\"spec-item\">\r\n            <span>Plage de mesure:</span>\r\n            <span>{sensor.range}</span>\r\n          </div>\r\n          <div className=\"spec-item\">\r\n            <span>Précision:</span>\r\n            <span>{sensor.accuracy}</span>\r\n          </div>\r\n          <div className=\"spec-item\">\r\n            <span>Dernière calibration:</span>\r\n            <span>{sensor.lastCalibration}</span>\r\n          </div>\r\n          <div className=\"spec-item\">\r\n            <span>Emplacement:</span>\r\n            <span>{sensor.location}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"sensor-actions\">\r\n        <button \r\n          className=\"btn btn-primary\"\r\n          onClick={() => onCalibrate(sensor.id)}\r\n        >\r\n          📊 Calibrer\r\n        </button>\r\n        <button \r\n          className=\"btn btn-secondary\"\r\n          onClick={() => onReset(sensor.id)}\r\n        >\r\n          🔄 Réinitialiser\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Capteurs = () => {\r\n  const [sensors, setSensors] = useState([\r\n    {\r\n      id: 1,\r\n      name: 'Capteur d\\'Humidité du Sol YL-69',\r\n      type: 'Humidité du Sol',\r\n      icon: '💧',\r\n      currentValue: '--',\r\n      status: 'inactive',\r\n      range: '0-100%',\r\n      accuracy: '±2%',\r\n      lastCalibration: '--',\r\n      location: 'Zone de culture A',\r\n      technicalSpecs: {\r\n        voltage: '3.3V - 5V',\r\n        output: 'Signal analogique',\r\n        material: 'Électrodes en nickel',\r\n        dimensions: '60mm x 20mm x 5mm'\r\n      }\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Capteur DHT11',\r\n      type: 'Température & Humidité Air',\r\n      icon: '🌡️',\r\n      currentValue: '--',\r\n      status: 'inactive',\r\n      range: '0-50°C / 20-90%',\r\n      accuracy: '±2°C / ±5%',\r\n      lastCalibration: '--',\r\n      location: 'Serre principale',\r\n      technicalSpecs: {\r\n        voltage: '3V - 5.5V',\r\n        output: 'Signal numérique',\r\n        interface: 'Single-wire',\r\n        dimensions: '15.5mm x 12mm x 5.5mm'\r\n      }\r\n    },\r\n  ]);\r\n  const [error, setError] = useState(null);\r\n  const [selectedSensor, setSelectedSensor] = useState(null);\r\n  const [showCalibrationModal, setShowCalibrationModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const socket = io('http://localhost:3000', {\r\n      reconnection: true,\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 1000,\r\n    });\r\n\r\n    socket.on('connect', () => {\r\n      console.log('Connected to Socket.IO server');\r\n      setError(null);\r\n    });\r\n\r\n    socket.on('sensorData', (data) => {\r\n      try {\r\n        console.log('Received sensor data:', data);\r\n\r\n        const timestamp = data.ts\r\n          ? new Date(data.ts * 1000).toLocaleDateString('fr-FR')\r\n          : new Date().toLocaleDateString('fr-FR');\r\n\r\n        const soilMoistureStatus = data.h_soil_pourcentage\r\n          ? data.h_soil_pourcentage === 0 ? 'error' : data.h_soil_pourcentage < 40 ? 'warning' : 'active'\r\n          : 'inactive';\r\n        const tempStatus = data.t\r\n          ? data.t < 10 || data.t > 40 ? 'error' : data.t < 15 || data.t > 35 ? 'warning' : 'active'\r\n          : 'inactive';\r\n        const humidityStatus = data.h_air\r\n          ? data.h_air < 30 ? 'error' : data.h_air < 50 ? 'warning' : 'active'\r\n          : 'inactive';\r\n\r\n        const updatedSensors = [\r\n          {\r\n            id: 1,\r\n            name: 'Capteur d\\'Humidité du Sol YL-69',\r\n            type: 'Humidité du Sol',\r\n            icon: '💧',\r\n            currentValue: data.h_soil_pourcentage ? `${data.h_soil_pourcentage}%` : '--',\r\n            status: soilMoistureStatus,\r\n            range: '0-100%',\r\n            accuracy: '±2%',\r\n            lastCalibration: timestamp,\r\n            location: 'Zone de culture A',\r\n            technicalSpecs: {\r\n              voltage: '3.3V - 5V',\r\n              output: 'Signal analogique',\r\n              material: 'Électrodes en nickel',\r\n              dimensions: '60mm x 20mm x 5mm'\r\n            }\r\n          },\r\n          {\r\n            id: 2,\r\n            name: 'Capteur DHT11',\r\n            type: 'Température & Humidité Air',\r\n            icon: '🌡️',\r\n            currentValue: data.t && data.h_air ? `${data.t}°C / ${data.h_air}%` : '--',\r\n            status: tempStatus === 'error' || humidityStatus === 'error' ? 'error' :\r\n                    tempStatus === 'warning' || humidityStatus === 'warning' ? 'warning' : 'active',\r\n            range: '0-50°C / 20-90%',\r\n            accuracy: '±2°C / ±5%',\r\n            lastCalibration: timestamp,\r\n            location: 'Serre principale',\r\n            technicalSpecs: {\r\n              voltage: '3V - 5.5V',\r\n              output: 'Signal numérique',\r\n              interface: 'Single-wire',\r\n              dimensions: '15.5mm x 12mm x 5.5mm'\r\n            }\r\n          },\r\n        ];\r\n\r\n        setSensors(updatedSensors);\r\n        setError(null);\r\n      } catch (err) {\r\n        console.error('Data parsing error:', err);\r\n        setError('Échec de l\\'analyse des données des capteurs');\r\n      }\r\n    });\r\n\r\n    socket.on('connect_error', (err) => {\r\n      console.error('Socket.IO connection error:', err);\r\n      setError('Échec de la connexion au serveur');\r\n    });\r\n\r\n    const timeout = setTimeout(() => {\r\n      if (!sensors.some(sensor => sensor.currentValue !== '--')) {\r\n        setError('Aucune réponse du serveur');\r\n      }\r\n    }, 10000); // 10 seconds timeout\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n      clearTimeout(timeout);\r\n      console.log('Disconnected from Socket.IO server');\r\n    };\r\n  }, []);\r\n\r\n  const handleCalibrate = (sensorId) => {\r\n    const sensor = sensors.find(s => s.id === sensorId);\r\n    setSelectedSensor(sensor);\r\n    setShowCalibrationModal(true);\r\n  };\r\n\r\n  const handleReset = (sensorId) => {\r\n    if (window.confirm('Êtes-vous sûr de vouloir réinitialiser ce capteur ?')) {\r\n      console.log(\"Resetting sensor ${sensor FHAId}\");\r\n      alert('Capteur réinitialisé avec succès!');\r\n    }\r\n  };\r\n\r\n  const handleCalibrationSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log('Calibrating sensor:', selectedSensor.id);\r\n    alert('Calibration effectuée avec succès!');\r\n    setShowCalibrationModal(false);\r\n  };\r\n\r\n  return (\r\n    <main className=\"capteurs-page\">\r\n      {error && (\r\n        <div className=\"error-container\">\r\n          <p>{error}</p>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => window.location.reload()}\r\n          >\r\n            Réessayer\r\n          </button>\r\n        </div>\r\n      )}\r\n      <header className=\"page-header\">\r\n        <h1>Gestion des Capteurs</h1>\r\n        <p className=\"page-subtitle\">Surveillance et configuration des capteurs du système</p>\r\n        <div className=\"sensors-summary\">\r\n          <div className=\"summary-item\">\r\n            <span className=\"summary-number\">{sensors.length}</span>\r\n            <span className=\"summary-label\">Capteurs</span>\r\n          </div>\r\n          <div className=\"summary-item\">\r\n            <span className=\"summary-number\">{sensors.filter(s => s.status === 'active').length}</span>\r\n            <span className=\"summary-label\">Actifs</span>\r\n          </div>\r\n          <div className=\"summary-item\">\r\n            <span className=\"summary-number\">{sensors.filter(s => s.status === 'warning').length}</span>\r\n            <span className=\"summary-label\">Alertes</span>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <section className=\"sensors-grid\">\r\n        {sensors.map(sensor => (\r\n          <SensorCard\r\n            key={sensor.id}\r\n            sensor={sensor}\r\n            onCalibrate={handleCalibrate}\r\n            onReset={handleReset}\r\n          />\r\n        ))}\r\n      </section>\r\n\r\n      <section className=\"system-status\">\r\n        <h2>État du Système</h2>\r\n        <div className=\"status-grid\">\r\n          <div className=\"status-card\">\r\n            <div className=\"status-icon\">🔌</div>\r\n            <div className=\"status-info\">\r\n              <h3>Connexion ESP32</h3>\r\n              <p className=\"status-value active\">{error ? 'Déconnecté' : 'Connecté'}</p>\r\n              <span className=\"status-time\">Dernière comm.: il y a 2 min</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"status-card\">\r\n            <div className=\"status-icon\">📡</div>\r\n            <div className=\"status-info\">\r\n              <h3>Signal WiFi</h3>\r\n              <p className=\"status-value active\">{error ? '--' : 'Excellent (-45 dBm)'}</p>\r\n              <span className=\"status-time\">SSID: SmartGrow_Network</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"status-card\">\r\n            <div className=\"status-icon\">🔋</div>\r\n            <div className=\"status-info\">\r\n              <h3>Alimentation</h3>\r\n              <p className=\"status-value active\">{error ? '--' : '5.0V (Normale)'}</p>\r\n              <span className=\"status-time\">Consommation: 850mA</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {showCalibrationModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <div className=\"modal-header\">\r\n              <h3>Calibration - {selectedSensor?.name}</h3>\r\n              <button \r\n                className=\"modal-close\"\r\n                onClick={() => setShowCalibrationModal(false)}\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n            \r\n            <form onSubmit={handleCalibrationSubmit}>\r\n              <div className=\"modal-body\">\r\n                <div className=\"calibration-info\">\r\n                  <p>🔧 Calibration automatique du capteur</p>\r\n                  <p>Assurez-vous que le capteur est dans des conditions normales avant de continuer.</p>\r\n                </div>\r\n                \r\n                <div className=\"calibration-steps\">\r\n                  <div className=\"step\">\r\n                    <span className=\"step-number\">1</span>\r\n                    <span>Vérifier les connexions physiques</span>\r\n                  </div>\r\n                  <div className=\"step\">\r\n                    <span className=\"step-number\">2</span>\r\n                    <span>Placer le capteur dans un environnement de référence</span>\r\n                  </div>\r\n                  <div className=\"step\">\r\n                    <span className=\"step-number\">3</span>\r\n                    <span>Lancer la calibration</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setShowCalibrationModal(false)}>\r\n                  Annuler\r\n                </button>\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Démarrer la Calibration\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Capteurs;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}