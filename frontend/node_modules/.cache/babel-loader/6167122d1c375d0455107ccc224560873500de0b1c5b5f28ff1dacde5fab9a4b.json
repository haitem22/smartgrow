{"ast":null,"code":"var _jsxFileName = \"D:\\\\programing\\\\New folder (2)\\\\systeme-irrigation\\\\src\\\\components\\\\pages\\\\Historique.js\",\n  _s = $RefreshSig$();\n// src/components/pages/Historique.js\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\nimport './Historique.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatisticsCard = ({\n  title,\n  value,\n  icon,\n  color\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"statistics-card\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stat-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stat-icon\",\n      style: {\n        backgroundColor: color\n      },\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stat-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-value\",\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n_c = StatisticsCard;\nconst Historique = () => {\n  _s();\n  var _statistics$averageHu, _statistics$averageMo, _statistics$averageTe;\n  const [selectedPeriod, setSelectedPeriod] = useState('7d');\n  const [selectedMetric, setSelectedMetric] = useState('humidity');\n  const [data, setData] = useState([]);\n  const [statistics, setStatistics] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Générer des données d'exemple\n  const generateSampleData = period => {\n    const days = period === '24h' ? 1 : period === '7d' ? 7 : 30;\n    const data = [];\n    const now = new Date();\n    for (let i = days - 1; i >= 0; i--) {\n      const date = new Date(now.getTime() - i * 24 * 60 * 60 * 1000);\n      data.push({\n        date: date.toLocaleDateString('fr-FR', {\n          month: 'short',\n          day: 'numeric'\n        }),\n        fullDate: date.toISOString().split('T')[0],\n        humidity: Math.floor(30 + Math.random() * 40),\n        moisture: Math.floor(20 + Math.random() * 60),\n        temperature: Math.floor(18 + Math.random() * 15)\n      });\n    }\n    return data;\n  };\n\n  // Calculer les moyennes des capteurs\n  const calculateStatistics = data => {\n    if (!data || data.length === 0) {\n      return {\n        averageHumidity: {\n          value: '--'\n        },\n        averageMoisture: {\n          value: '--'\n        },\n        averageTemperature: {\n          value: '--'\n        }\n      };\n    }\n    const totalHumidity = data.reduce((sum, item) => sum + (item.humidity || 0), 0);\n    const totalMoisture = data.reduce((sum, item) => sum + (item.moisture || 0), 0);\n    const totalTemperature = data.reduce((sum, item) => sum + (item.temperature || 0), 0);\n    const countHumidity = data.filter(item => item.humidity != null).length;\n    const countMoisture = data.filter(item => item.moisture != null).length;\n    const countTemperature = data.filter(item => item.temperature != null).length;\n    const avgHumidity = countHumidity > 0 ? Math.round(totalHumidity / countHumidity) : '--';\n    const avgMoisture = countMoisture > 0 ? Math.round(totalMoisture / countMoisture) : '--';\n    const avgTemperature = countTemperature > 0 ? Math.round(totalTemperature / countTemperature) : '--';\n    return {\n      averageHumidity: {\n        value: avgHumidity\n      },\n      averageMoisture: {\n        value: avgMoisture\n      },\n      averageTemperature: {\n        value: avgTemperature\n      }\n    };\n  };\n  useEffect(() => {\n    const fetchHistoricalData = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch(`http://localhost:3000/api/sensor-data/history/period?period=${selectedPeriod}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        if (!response.ok) throw new Error('Failed to fetch historical data');\n        const serverData = await response.json();\n        const mappedData = serverData.map(item => ({\n          date: new Date(item.timestamp).toLocaleDateString('fr-FR', {\n            month: 'short',\n            day: 'numeric'\n          }),\n          fullDate: new Date(item.timestamp).toISOString().split('T')[0],\n          humidity: item.h_air != null ? item.h_air : 0,\n          moisture: item.h_soil_pourcentage != null ? item.h_soil_pourcentage : 0,\n          temperature: item.t != null ? item.t : 0\n        }));\n        setData(mappedData);\n        setStatistics(calculateStatistics(mappedData));\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching historical data:', error);\n        setData([]);\n        setStatistics({\n          averageHumidity: {\n            value: '--'\n          },\n          averageMoisture: {\n            value: '--'\n          },\n          averageTemperature: {\n            value: '--'\n          }\n        });\n        setIsLoading(false);\n      }\n    };\n    fetchHistoricalData();\n  }, [selectedPeriod]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: \"\\uD83D\\uDCCA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Chargement de l'historique...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"historique-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Historique des Capteurs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"page-subtitle\",\n        children: \"Analyse des donn\\xE9es des capteurs sur la p\\xE9riode s\\xE9lectionn\\xE9e\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"period-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: selectedPeriod === '24h' ? 'active' : '',\n            onClick: () => setSelectedPeriod('24h'),\n            children: \"24 Heures\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: selectedPeriod === '7d' ? 'active' : '',\n            onClick: () => setSelectedPeriod('7d'),\n            children: \"7 Jours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: selectedPeriod === '30d' ? 'active' : '',\n            onClick: () => setSelectedPeriod('30d'),\n            children: \"30 Jours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"statistics-overview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Moyennes de la P\\xE9riode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"statistics-grid\",\n        children: [/*#__PURE__*/_jsxDEV(StatisticsCard, {\n          title: \"Humidit\\xE9 de l'Air Moyenne\",\n          value: (_statistics$averageHu = statistics.averageHumidity) === null || _statistics$averageHu === void 0 ? void 0 : _statistics$averageHu.value,\n          icon: \"\\uD83D\\uDCA8\",\n          color: \"#2196f3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatisticsCard, {\n          title: \"Humidit\\xE9 du Sol Moyenne\",\n          value: (_statistics$averageMo = statistics.averageMoisture) === null || _statistics$averageMo === void 0 ? void 0 : _statistics$averageMo.value,\n          icon: \"\\uD83D\\uDCA7\",\n          color: \"#4caf50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatisticsCard, {\n          title: \"Temp\\xE9rature Moyenne\",\n          value: (_statistics$averageTe = statistics.averageTemperature) === null || _statistics$averageTe === void 0 ? void 0 : _statistics$averageTe.value,\n          icon: \"\\uD83C\\uDF21\",\n          color: \"#ff9800\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"charts-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\xC9volution des Capteurs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-selector\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: selectedMetric === 'humidity' ? 'active' : '',\n              onClick: () => setSelectedMetric('humidity'),\n              children: \"Humidit\\xE9 Air\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: selectedMetric === 'moisture' ? 'active' : '',\n              onClick: () => setSelectedMetric('moisture'),\n              children: \"Humidit\\xE9 Sol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: selectedMetric === 'temperature' ? 'active' : '',\n              onClick: () => setSelectedMetric('temperature'),\n              children: \"Temp\\xE9rature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 400,\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: data,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                stroke: \"#f0f0f0\",\n                strokeDasharray: \"2 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"date\",\n                tick: {\n                  fontSize: 12\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                tick: {\n                  fontSize: 12\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                contentStyle: {\n                  backgroundColor: '#fff',\n                  border: '1px solid #ccc',\n                  borderRadius: '8px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: selectedMetric,\n                stroke: selectedMetric === 'humidity' ? '#2196f3' : selectedMetric === 'moisture' ? '#4caf50' : '#ff9800',\n                strokeWidth: 3,\n                dot: {\n                  fill: selectedMetric === 'humidity' ? '#2196f3' : selectedMetric === 'moisture' ? '#4caf50' : '#ff9800',\n                  strokeWidth: 2,\n                  r: 4\n                },\n                activeDot: {\n                  r: 6,\n                  strokeWidth: 2\n                },\n                name: selectedMetric === 'humidity' ? \"Humidité de l'Air (%)\" : selectedMetric === 'moisture' ? 'Humidité du Sol (%)' : 'Température (°C)'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(Historique, \"NbPPOx6F1cSa8dMnxgCTvWP+nAE=\");\n_c2 = Historique;\nexport default Historique;\nvar _c, _c2;\n$RefreshReg$(_c, \"StatisticsCard\");\n$RefreshReg$(_c2, \"Historique\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","StatisticsCard","title","value","icon","color","className","children","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","Historique","_s","_statistics$averageHu","_statistics$averageMo","_statistics$averageTe","selectedPeriod","setSelectedPeriod","selectedMetric","setSelectedMetric","data","setData","statistics","setStatistics","isLoading","setIsLoading","generateSampleData","period","days","now","Date","i","date","getTime","push","toLocaleDateString","month","day","fullDate","toISOString","split","humidity","Math","floor","random","moisture","temperature","calculateStatistics","length","averageHumidity","averageMoisture","averageTemperature","totalHumidity","reduce","sum","item","totalMoisture","totalTemperature","countHumidity","filter","countMoisture","countTemperature","avgHumidity","round","avgMoisture","avgTemperature","fetchHistoricalData","response","fetch","headers","Authorization","localStorage","getItem","ok","Error","serverData","json","mappedData","map","timestamp","h_air","h_soil_pourcentage","t","error","console","onClick","width","height","stroke","strokeDasharray","dataKey","tick","fontSize","contentStyle","border","borderRadius","type","strokeWidth","dot","fill","r","activeDot","name","_c2","$RefreshReg$"],"sources":["D:/programing/New folder (2)/systeme-irrigation/src/components/pages/Historique.js"],"sourcesContent":["// src/components/pages/Historique.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\r\nimport './Historique.css';\r\n\r\nconst StatisticsCard = ({ title, value, icon, color }) => (\r\n  <div className=\"statistics-card\">\r\n    <div className=\"stat-header\">\r\n      <div className=\"stat-icon\" style={{ backgroundColor: color }}>\r\n        {icon}\r\n      </div>\r\n      <div className=\"stat-info\">\r\n        <h3>{title}</h3>\r\n        <div className=\"stat-value\">{value}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst Historique = () => {\r\n  const [selectedPeriod, setSelectedPeriod] = useState('7d');\r\n  const [selectedMetric, setSelectedMetric] = useState('humidity');\r\n  const [data, setData] = useState([]);\r\n  const [statistics, setStatistics] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Générer des données d'exemple\r\n  const generateSampleData = (period) => {\r\n    const days = period === '24h' ? 1 : period === '7d' ? 7 : 30;\r\n    const data = [];\r\n    const now = new Date();\r\n    for (let i = days - 1; i >= 0; i--) {\r\n      const date = new Date(now.getTime() - i * 24 * 60 * 60 * 1000);\r\n      data.push({\r\n        date: date.toLocaleDateString('fr-FR', { month: 'short', day: 'numeric' }),\r\n        fullDate: date.toISOString().split('T')[0],\r\n        humidity: Math.floor(30 + Math.random() * 40),\r\n        moisture: Math.floor(20 + Math.random() * 60),\r\n        temperature: Math.floor(18 + Math.random() * 15)\r\n      });\r\n    }\r\n    return data;\r\n  };\r\n\r\n  // Calculer les moyennes des capteurs\r\n  const calculateStatistics = (data) => {\r\n    if (!data || data.length === 0) {\r\n      return {\r\n        averageHumidity: { value: '--' },\r\n        averageMoisture: { value: '--' },\r\n        averageTemperature: { value: '--' }\r\n      };\r\n    }\r\n    const totalHumidity = data.reduce((sum, item) => sum + (item.humidity || 0), 0);\r\n    const totalMoisture = data.reduce((sum, item) => sum + (item.moisture || 0), 0);\r\n    const totalTemperature = data.reduce((sum, item) => sum + (item.temperature || 0), 0);\r\n    const countHumidity = data.filter(item => item.humidity != null).length;\r\n    const countMoisture = data.filter(item => item.moisture != null).length;\r\n    const countTemperature = data.filter(item => item.temperature != null).length;\r\n    const avgHumidity = countHumidity > 0 ? Math.round(totalHumidity / countHumidity) : '--';\r\n    const avgMoisture = countMoisture > 0 ? Math.round(totalMoisture / countMoisture) : '--';\r\n    const avgTemperature = countTemperature > 0 ? Math.round(totalTemperature / countTemperature) : '--';\r\n    return {\r\n      averageHumidity: { value: avgHumidity },\r\n      averageMoisture: { value: avgMoisture },\r\n      averageTemperature: { value: avgTemperature }\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchHistoricalData = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await fetch(`http://localhost:3000/api/sensor-data/history/period?period=${selectedPeriod}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n        if (!response.ok) throw new Error('Failed to fetch historical data');\r\n        const serverData = await response.json();\r\n        const mappedData = serverData.map(item => ({\r\n          date: new Date(item.timestamp).toLocaleDateString('fr-FR', { month: 'short', day: 'numeric' }),\r\n          fullDate: new Date(item.timestamp).toISOString().split('T')[0],\r\n          humidity: item.h_air != null ? item.h_air : 0,\r\n          moisture: item.h_soil_pourcentage != null ? item.h_soil_pourcentage : 0,\r\n          temperature: item.t != null ? item.t : 0,\r\n        }));\r\n        setData(mappedData);\r\n        setStatistics(calculateStatistics(mappedData));\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching historical data:', error);\r\n        setData([]);\r\n        setStatistics({\r\n          averageHumidity: { value: '--' },\r\n          averageMoisture: { value: '--' },\r\n          averageTemperature: { value: '--' }\r\n        });\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchHistoricalData();\r\n  }, [selectedPeriod]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"loading-spinner\">📊</div>\r\n        <p>Chargement de l'historique...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <main className=\"historique-page\">\r\n      <header className=\"page-header\">\r\n        <h1>Historique des Capteurs</h1>\r\n        <p className=\"page-subtitle\">Analyse des données des capteurs sur la période sélectionnée</p>\r\n        \r\n        <div className=\"controls\">\r\n          <div className=\"period-selector\">\r\n            <button \r\n              className={selectedPeriod === '24h' ? 'active' : ''}\r\n              onClick={() => setSelectedPeriod('24h')}\r\n            >\r\n              24 Heures\r\n            </button>\r\n            <button \r\n              className={selectedPeriod === '7d' ? 'active' : ''}\r\n              onClick={() => setSelectedPeriod('7d')}\r\n            >\r\n              7 Jours\r\n            </button>\r\n            <button \r\n              className={selectedPeriod === '30d' ? 'active' : ''}\r\n              onClick={() => setSelectedPeriod('30d')}\r\n            >\r\n              30 Jours\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Statistics Overview - Moyennes des capteurs */}\r\n      <section className=\"statistics-overview\">\r\n        <h2>Moyennes de la Période</h2>\r\n        <div className=\"statistics-grid\">\r\n          <StatisticsCard\r\n            title=\"Humidité de l'Air Moyenne\"\r\n            value={statistics.averageHumidity?.value}\r\n            icon=\"💨\"\r\n            color=\"#2196f3\"\r\n          />\r\n          <StatisticsCard\r\n            title=\"Humidité du Sol Moyenne\"\r\n            value={statistics.averageMoisture?.value}\r\n            icon=\"💧\"\r\n            color=\"#4caf50\"\r\n          />\r\n          <StatisticsCard\r\n            title=\"Température Moyenne\"\r\n            value={statistics.averageTemperature?.value}\r\n            icon=\"🌡\"\r\n            color=\"#ff9800\"\r\n          />\r\n        </div>\r\n      </section>\r\n\r\n      {/* Charts Section */}\r\n      <section className=\"charts-section\">\r\n        <div className=\"chart-container\">\r\n          <div className=\"chart-header\">\r\n            <h2>Évolution des Capteurs</h2>\r\n            <div className=\"metric-selector\">\r\n              <button \r\n                className={selectedMetric === 'humidity' ? 'active' : ''}\r\n                onClick={() => setSelectedMetric('humidity')}\r\n              >\r\n                Humidité Air\r\n              </button>\r\n              <button \r\n                className={selectedMetric === 'moisture' ? 'active' : ''}\r\n                onClick={() => setSelectedMetric('moisture')}\r\n              >\r\n                Humidité Sol\r\n              </button>\r\n              <button \r\n                className={selectedMetric === 'temperature' ? 'active' : ''}\r\n                onClick={() => setSelectedMetric('temperature')}\r\n              >\r\n                Température\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"chart-wrapper\">\r\n            <ResponsiveContainer width=\"100%\" height={400}>\r\n              <LineChart data={data}>\r\n                <CartesianGrid stroke=\"#f0f0f0\" strokeDasharray=\"2 2\" />\r\n                <XAxis dataKey=\"date\" tick={{ fontSize: 12 }} />\r\n                <YAxis tick={{ fontSize: 12 }} />\r\n                <Tooltip \r\n                  contentStyle={{ \r\n                    backgroundColor: '#fff', \r\n                    border: '1px solid #ccc',\r\n                    borderRadius: '8px'\r\n                  }}\r\n                />\r\n                <Line \r\n                  type=\"monotone\" \r\n                  dataKey={selectedMetric} \r\n                  stroke={selectedMetric === 'humidity' ? '#2196f3' : \r\n                          selectedMetric === 'moisture' ? '#4caf50' : '#ff9800'} \r\n                  strokeWidth={3}\r\n                  dot={{ \r\n                    fill: selectedMetric === 'humidity' ? '#2196f3' : \r\n                          selectedMetric === 'moisture' ? '#4caf50' : '#ff9800', \r\n                    strokeWidth: 2, \r\n                    r: 4 \r\n                  }}\r\n                  activeDot={{ r: 6, strokeWidth: 2 }}\r\n                  name={selectedMetric === 'humidity' ? \"Humidité de l'Air (%)\" : \r\n                        selectedMetric === 'moisture' ? 'Humidité du Sol (%)' : 'Température (°C)'}\r\n                />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Historique;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}